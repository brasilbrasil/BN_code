ls()
easy_install rpy2
rm(list = ls()) #remove all cpast worksheet variables
wd="C:/Users/lfortini/Dropbox/USGS/Science/0-ongoing/VAs/HI spp VA/Conceptual model/1-Model parameterization/spatial data discretization/"
setwd(wd)
file_nm="all_spp_values_nobioregion.csv"     #get rid of header of first row
outname="landscape_metrics_nobioregion.csv"
quant_levels=function(x){
y=quantile(x, probs = seq(0, 1, 0.25), na.rm = TRUE, names = TRUE)
lowQ=y[2]
highQ=y[4]
quant_data=array("none", dim(raw_landscape_data2)[1])
quant_data[x<lowQ]= "low"
quant_data[x>highQ]= "high"
quant_data[x<=highQ & x>=lowQ]="medium"
quant_data
}
raw_landscape_data=read.csv(file_nm)
raw_landscape_data2=raw_landscape_data[raw_landscape_data$sqkm_area_CCE!='not present',]
raw_landscape_data2=raw_landscape_data2[raw_landscape_data2$sqkm_area_CCE!='NA',]
head(raw_landscape_data2)
#ensure data is in numeric, not strnig format
jnk=dim(raw_landscape_data2)[2]
for (i in 4:jnk){
x=raw_landscape_data2[,i]
if (class(x)!="numeric"){
x=as.numeric(levels(x)[x])
}
raw_landscape_data2[,i]=x
}
indicator_mat=raw_landscape_data2$sp_name
indicator_mat=cbind(raw_landscape_data2$sp_name, raw_landscape_data2$sp_code)
View(indicator_mat)
View(indicator_mat)
head(raw_landscape_data2)
rm(list = ls()) #remove all cpast worksheet variables
wd="C:/Users/lfortini/Dropbox/USGS/Science/0-ongoing/VAs/HI spp VA/Conceptual model/1-Model parameterization/spatial data discretization/"
setwd(wd)
file_nm="all_spp_values_nobioregion.csv"     #get rid of header of first row
outname="landscape_metrics_nobioregion.csv"
quant_levels=function(x){
y=quantile(x, probs = seq(0, 1, 0.25), na.rm = TRUE, names = TRUE)
lowQ=y[2]
highQ=y[4]
quant_data=array("none", dim(raw_landscape_data2)[1])
quant_data[x<lowQ]= "low"
quant_data[x>highQ]= "high"
quant_data[x<=highQ & x>=lowQ]="medium"
quant_data
}
raw_landscape_data=read.csv(file_nm)
raw_landscape_data2=raw_landscape_data[raw_landscape_data$sqkm_area_CCE!='not present',]
raw_landscape_data2=raw_landscape_data2[raw_landscape_data2$sqkm_area_CCE!='NA',]
head(raw_landscape_data2)
#ensure data is in numeric, not strnig format
jnk=dim(raw_landscape_data2)[2]
jnk=dim(raw_landscape_data2)[2]
for (i in 3:jnk){
x=raw_landscape_data2[,i]
if (class(x)!="numeric"){
x=as.numeric(levels(x)[x])
}
raw_landscape_data2[,i]=x
}
head(raw_landscape_data2)
raw_landscape_data=read.csv(file_nm)
raw_landscape_data2=raw_landscape_data[raw_landscape_data$sqkm_area_CCE!='not present',]
raw_landscape_data2=raw_landscape_data2[raw_landscape_data2$sqkm_area_CCE!='NA',]
head(raw_landscape_data2)
#ensure data is in numeric, not strnig format
jnk=dim(raw_landscape_data2)[2]
for (i in 4:jnk){
x=raw_landscape_data2[,i]
if (class(x)!="numeric"){
x=as.numeric(levels(x)[x])
}
raw_landscape_data2[,i]=x
}
head(raw_landscape_data2)
raw_landscape_data2$sp_name
indicator_mat=cbind(raw_landscape_data2$sp_name, raw_landscape_data2$sp_code)
View(indicator_mat)
View(indicator_mat)
View(raw_landscape_data)
indicator_mat
raw_landscape_data2$sp_name
indicator_mat=c()
indicator_mat=raw_landscape_data2$sp_name
indicator_mat=c()
indicator_mat=raw_landscape_data2$sp_name
indicator_mat=cbind(indicator_mat, raw_landscape_data2$sp_code)
View(indicator_mat)
View(indicator_mat)
indicator_mat2 <- data.frame(sp_name=raw_landscape_data2$sp_name,sp_code=raw_landscape_data2$sp_code)
View(indicator_mat2)
View(indicator_mat2)
indicator_mat <- data.frame(sp_name=raw_landscape_data2$sp_name,sp_code=raw_landscape_data2$sp_code)
x=raw_landscape_data2$sqkm_area_CCE
sqkm_area_CCE=x
y=quantile(x, probs = seq(0, 1, 0.25), na.rm = FALSE, names = TRUE)
lowQ=y[2]
highQ=y[4]
quant_data=array("none", dim(raw_landscape_data2)[1])
quant_data[x<lowQ]= "low"
quant_data[x>highQ]= "high"
quant_data[x<=highQ & x>=lowQ]="medium"
Qsqkm_area_CCE=quant_data
indicator_mat=cbind(indicator_mat, sqkm_area_CCE)
View(indicator_mat)
View(indicator_mat)
